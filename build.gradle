plugins {
    id "org.flywaydb.flyway" version "4.2.0"
}

group 'com.robo4j'

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'maven'
apply from: 'libraries.gradle'

allprojects {
    repositories {
        mavenCentral()
        mavenLocal()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'eclipse'
    apply plugin: 'maven'
    apply plugin: 'signing'

    compileJava {
        sourceCompatibility = "${robo4jJavaVersion}"
        targetCompatibility = "${robo4jJavaVersion}"
    }

    group 'com.robo4j'
    version "${robo4jVersion}"
}


project("robo4j-core") {
    description = "Robo4J Core"

    dependencies {
        testCompile "junit:junit:${junitVersion}@jar"
        testCompile "org.hamcrest:hamcrest-all:${hamcrestAllVersion}@jar"
    }

    test {
        systemProperty "java.net.preferIPv4Stack", "true"
    }

    sourceSets {
        main {
            java {
                srcDirs = ['src/main/java']
            }
            resources {
                srcDirs = ['src/main/resources']
            }
        }

        test {
            java {
                srcDirs = ['src/test/java']
            }
            resources {
                srcDirs = ['src/test/resources']
            }
        }
    }

    //sonatype
    group = "com.robo4j"
    archivesBaseName = "robo4j-core"
    version = "${robo4jVersion}"

    task javadocJar(type: Jar) {
        classifier = 'javadoc'
        from javadoc
    }

    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    artifacts {
        archives javadocJar, sourcesJar
    }

    signing {
        sign configurations.archives
    }

    uploadArchives {
        repositories {
            mavenDeployer {
                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

                repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                    authentication(userName: ossrhUsername, password: ossrhPassword)
                }

                snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                    authentication(userName: ossrhUsername, password: ossrhPassword)
                }

                pom.project {
                    name 'Robo4J Core'
                    packaging 'jar'
                    description 'Robo4J Core library'
                    url 'http://www.robo4j.io'

                    scm {
                        connection 'scm:git@github.com:Robo4J/robo4j.git'
                        developerConnection 'scm:git@github.com:Robo4J/robo4j.git'
                        url 'scm:git@github.com:Robo4J/robo4j.git'
                    }

                    licenses {
                        license {
                            name 'GNU General Public License, Version 3.0'
                            url 'http://www.gnu.org/licenses/gpl-3.0.txt'
                        }
                    }

                    developers {
                        developer {
                            id 'thegreystone'
                            name 'Marcus Hirt'
                            email 'marcus@robo4j.io'
                        }

                        developer {
                            id 'mirage22'
                            name 'Miroslav Wengner'
                            email 'miro@robo4j.io'
                        }
                    }
                }
            }
        }
    }
}

project("robo4j-db-sql") {

    description = "Robo4J Database SQL"

    apply plugin: "org.flywaydb.flyway"

    dependencies {
        compile(project(":robo4j-core"))
        compile "org.flywaydb:flyway-core:${flywayVersion}"
        compile "org.hibernate.javax.persistence:hibernate-jpa-2.1-api:${hibernateJpaVersion}"
        compile "org.postgresql:postgresql:${postgresqlVersion}"
        compile "org.hibernate:hibernate-core:${hibernateVersion}"
        compile "com.h2database:h2:${h2Version}"
        testCompile project(':robo4j-core').sourceSets.test.output
        testCompile "junit:junit:${junitVersion}@jar"
        testCompile "org.hamcrest:hamcrest-all:${hamcrestAllVersion}@jar"
    }

    flyway {
        url = 'jdbc:h2:~/data/robo4j1h2'
        user = 'sa'
    }

    sourceSets {
        main {
            java {
                srcDirs = ['src/main/java']
            }
            resources {
                srcDirs = ['src/main/resources']
            }
        }

        test {
            java {
                srcDirs = ['src/test/java']
            }
            resources {
                srcDirs = ['src/test/resources']
            }
        }
    }
}

project("robo4j-hw-lego") {
    description = "Robo4J Lego Hardware"

    repositories {
        mavenCentral()
        mavenLocal()
    }

    dependencies {
        compile fileTree(dir: 'libs', include: 'ev3classes-9.1.jar')
        compile(project(":robo4j-math"))
        testCompile "junit:junit:${junitVersion}"
    }

    sourceSets {
        main {
            java {
                srcDirs = ['src/main/java', 'src/examples/java']
            }
            resources {
                srcDirs = ['src/main/resources', 'src/examples/resources']
            }
        }

        test {
            java {
                srcDirs = ['src/test/java']
            }
            resources {
                srcDirs = ['src/test/resources']
            }
        }
    }

    //sonatype
    group = "com.robo4j"
    archivesBaseName = "robo4j-hw-lego"
    version = "${robo4jVersion}"

    task javadocJar(type: Jar) {
        classifier = 'javadoc'
        from javadoc
    }

    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    artifacts {
        archives javadocJar, sourcesJar
    }

    signing {
        sign configurations.archives
    }

    uploadArchives {
        repositories {
            mavenDeployer {
                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

                repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                    authentication(userName: ossrhUsername, password: ossrhPassword)
                }

                snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                    authentication(userName: ossrhUsername, password: ossrhPassword)
                }

                pom.project {
                    name 'robo4j-hw-lego'
                    packaging 'jar'
                    description 'Robo4J Lego Hardware library'
                    url 'http://www.robo4j.io'

                    scm {
                        connection 'scm:git@github.com:Robo4J/robo4j.git'
                        developerConnection 'scm:git@github.com:Robo4J/robo4j.git'
                        url 'scm:git@github.com:Robo4J/robo4j.git'
                    }

                    licenses {
                        license {
                            name 'GNU General Public License, Version 3.0'
                            url 'http://www.gnu.org/licenses/gpl-3.0.txt'
                        }
                    }

                    developers {
                        developer {
                            id 'thegreystone'
                            name 'Marcus Hirt'
                            email 'marcus@robo4j.io'
                        }

                        developer {
                            id 'mirage22'
                            name 'Miroslav Wengner'
                            email 'miro@robo4j.io'
                        }
                    }
                }
            }
        }
    }
}

project("robo4j-hw-rpi") {
    description = "Robo4J RaspberryPi Hardware"

    //create a single Jar with all dependencies
    task fatJar(type: Jar) {
        manifest {
            attributes 'Implementation-Title': baseName,
                    'Implementation-Version': version,
                    'Main-Class': 'com.robo4j.hw.rpi.i2c.adafruitled.GraphBarTest'
        }
        //baseName = project.name + '-all'
        baseName = 'robo4j-hw-rpi'
        from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
        with jar
    }

    dependencies {
        compile "com.pi4j:pi4j-core:${pi4jVersion}"
        compile(project(":robo4j-math"))
        testCompile "junit:junit:${junitVersion}"
    }

    sourceSets {
        main {
            java {
                srcDirs = ['src/main/java', 'src/examples/java']
            }
            resources {
                srcDirs = ['src/main/resources', 'src/examples/resources']
            }
        }

        test {
            java {
                srcDirs = ['src/test/java']
            }
            resources {
                srcDirs = ['src/test/resources']
            }
        }
    }

    //sonatype
    group = "com.robo4j"
    archivesBaseName = "robo4j-hw-rpi"
    version = "${robo4jVersion}"

    task javadocJar(type: Jar) {
        classifier = 'javadoc'
        from javadoc
    }

    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    artifacts {
        archives javadocJar, sourcesJar
    }

    signing {
        sign configurations.archives
    }

    uploadArchives {
        repositories {
            mavenDeployer {
                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

                repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                    authentication(userName: ossrhUsername, password: ossrhPassword)
                }

                snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                    authentication(userName: ossrhUsername, password: ossrhPassword)
                }

                pom.project {
                    name 'robo4j-hw-rpi'
                    packaging 'jar'
                    description 'Robo4J RaspberryPi Hardware library'
                    url 'http://www.robo4j.io'

                    scm {
                        connection 'scm:git@github.com:Robo4J/robo4j.git'
                        developerConnection 'scm:git@github.com:Robo4J/robo4j.git'
                        url 'scm:git@github.com:Robo4J/robo4j.git'
                    }

                    licenses {
                        license {
                            name 'GNU General Public License, Version 3.0'
                            url 'http://www.gnu.org/licenses/gpl-3.0.txt'
                        }
                    }

                    developers {
                        developer {
                            id 'thegreystone'
                            name 'Marcus Hirt'
                            email 'marcus@robo4j.io'
                        }

                        developer {
                            id 'mirage22'
                            name 'Miroslav Wengner'
                            email 'miro@robo4j.io'
                        }
                    }
                }
            }
        }
    }
}

project("robo4j-math") {
    description = "Robo4J Math"


    dependencies {
        testCompile "junit:junit:${junitVersion}"
    }

    sourceSets {
        main {
            java {
                srcDirs = ['src/main/java']
            }
            resources {
                srcDirs = ['src/main/resources']
            }
        }

        test {
            java {
                srcDirs = ['src/test/java']
            }
            resources {
                srcDirs = ['src/test/resources']
            }
        }
    }

    //sonatype
    group = "com.robo4j"
    archivesBaseName = "robo4j-math"
    version = "${robo4jVersion}"

    task javadocJar(type: Jar) {
        classifier = 'javadoc'
        from javadoc
    }

    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    artifacts {
        archives javadocJar, sourcesJar
    }

    signing {
        sign configurations.archives
    }

    uploadArchives {
        repositories {
            mavenDeployer {
                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

                repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                    authentication(userName: ossrhUsername, password: ossrhPassword)
                }

                snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                    authentication(userName: ossrhUsername, password: ossrhPassword)
                }

                pom.project {
                    name 'robo4j-math'
                    packaging 'jar'
                    description 'Robo4J Math library'
                    url 'http://www.robo4j.io'

                    scm {
                        connection 'scm:git@github.com:Robo4J/robo4j.git'
                        developerConnection 'scm:git@github.com:Robo4J/robo4j.git'
                        url 'scm:git@github.com:Robo4J/robo4j.git'
                    }

                    licenses {
                        license {
                            name 'GNU General Public License, Version 3.0'
                            url 'http://www.gnu.org/licenses/gpl-3.0.txt'
                        }
                    }

                    developers {
                        developer {
                            id 'thegreystone'
                            name 'Marcus Hirt'
                            email 'marcus@robo4j.io'
                        }

                        developer {
                            id 'mirage22'
                            name 'Miroslav Wengner'
                            email 'miro@robo4j.io'
                        }
                    }
                }
            }
        }
    }
}


project("robo4j-page") {
    description = "Robo4J Page"

    dependencies {
        testCompile "junit:junit:${junitVersion}@jar"
        testCompile "org.hamcrest:hamcrest-all:${hamcrestAllVersion}@jar"
    }

    sourceSets {
        main {
            java {
                srcDirs = ['src/main/java']
            }
            resources {
                srcDirs = ['src/main/resources']
            }
        }

        test {
            java {
                srcDirs = ['src/test/java']
            }
            resources {
                srcDirs = ['src/test/resources']
            }
        }
    }

    //sonatype
    group = "com.robo4j"
    archivesBaseName = "robo4j-page"
    version = "${robo4jVersion}"

    task javadocJar(type: Jar) {
        classifier = 'javadoc'
        from javadoc
    }

    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    artifacts {
        archives javadocJar, sourcesJar
    }

    signing {
        sign configurations.archives
    }

    uploadArchives {
        repositories {
            mavenDeployer {
                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

                repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                    authentication(userName: ossrhUsername, password: ossrhPassword)
                }

                snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                    authentication(userName: ossrhUsername, password: ossrhPassword)
                }

                pom.project {
                    name 'robo4j-page'
                    packaging 'jar'
                    description 'Robo4J Page library'
                    url 'http://www.robo4j.io'

                    scm {
                        connection 'scm:git@github.com:Robo4J/robo4j.git'
                        developerConnection 'scm:git@github.com:Robo4J/robo4j.git'
                        url 'scm:git@github.com:Robo4J/robo4j.git'
                    }

                    licenses {
                        license {
                            name 'GNU General Public License, Version 3.0'
                            url 'http://www.gnu.org/licenses/gpl-3.0.txt'
                        }
                    }

                    developers {
                        developer {
                            id 'thegreystone'
                            name 'Marcus Hirt'
                            email 'marcus@robo4j.io'
                        }

                        developer {
                            id 'mirage22'
                            name 'Miroslav Wengner'
                            email 'miro@robo4j.io'
                        }
                    }
                }
            }
        }
    }
}

project("robo4j-socket-http") {
    description = "Robo4J socket http"

    dependencies {
        compile(project(":robo4j-core"))
        testCompile "junit:junit:${junitVersion}@jar"
        testCompile "org.hamcrest:hamcrest-all:${hamcrestAllVersion}@jar"
    }

    sourceSets {
        main {
            java {
                srcDirs = ['src/main/java']
            }
            resources {
                srcDirs = ['src/main/resources']
            }
        }

        test {
            java {
                srcDirs = ['src/test/java']
            }
            resources {
                srcDirs = ['src/test/resources']
            }
        }
    }

    //sonatype
    group = "com.robo4j"
    archivesBaseName = "robo4j-socket-http"
    version = "${robo4jVersion}"

    task javadocJar(type: Jar) {
        classifier = 'javadoc'
        from javadoc
    }

    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    artifacts {
        archives javadocJar, sourcesJar
    }

    signing {
        sign configurations.archives
    }

    uploadArchives {
        repositories {
            mavenDeployer {
                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

                repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                    authentication(userName: ossrhUsername, password: ossrhPassword)
                }

                snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                    authentication(userName: ossrhUsername, password: ossrhPassword)
                }

                pom.project {
                    name 'robo4j-socket-http'
                    packaging 'jar'
                    description 'Robo4J socket http library'
                    url 'http://www.robo4j.io'

                    scm {
                        connection 'scm:git@github.com:Robo4J/robo4j.git'
                        developerConnection 'scm:git@github.com:Robo4J/robo4j.git'
                        url 'scm:git@github.com:Robo4J/robo4j.git'
                    }

                    licenses {
                        license {
                            name 'GNU General Public License, Version 3.0'
                            url 'http://www.gnu.org/licenses/gpl-3.0.txt'
                        }
                    }

                    developers {
                        developer {
                            id 'thegreystone'
                            name 'Marcus Hirt'
                            email 'marcus@robo4j.io'
                        }

                        developer {
                            id 'mirage22'
                            name 'Miroslav Wengner'
                            email 'miro@robo4j.io'
                        }
                    }
                }
            }
        }
    }
}

project("robo4j-units-lego") {
    description = "Robo4J Lego Abstractions"

    //create a single Jar with all dependencies
    task fatJar(type: Jar) {
        manifest {
            attributes 'Implementation-Title': 'robo4j-units-lego',
                    'Implementation-Version': version
        }
        baseName = 'robo4j-units-lego'
        from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
        with jar
    }

    dependencies {
        compile(project(":robo4j-core"))
        compile(project(":robo4j-hw-lego"))
        testCompile(project(":robo4j-socket-http"))
        testCompile "junit:junit:${junitVersion}"
        testCompile "org.hamcrest:hamcrest-all:${hamcrestAllVersion}"
    }

    sourceSets {
        main {
            java {
                srcDirs = ['src/main/java']
            }
            resources {
                srcDirs = ['src/main/resources']
            }
        }

        test {
            java {
                srcDirs = ['src/test/java']
            }
            resources {
                srcDirs = ['src/test/resources']
            }
        }
    }

    //sonatype
    group = "com.robo4j"
    archivesBaseName = "robo4j-units-lego"
    version = "${robo4jVersion}"

    task javadocJar(type: Jar) {
        classifier = 'javadoc'
        from javadoc
    }

    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    artifacts {
        archives javadocJar, sourcesJar
    }

    signing {
        sign configurations.archives
    }

    uploadArchives {
        repositories {
            mavenDeployer {
                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

                repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                    authentication(userName: ossrhUsername, password: ossrhPassword)
                }

                snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                    authentication(userName: ossrhUsername, password: ossrhPassword)
                }

                pom.project {
                    name 'robo4j-units-lego'
                    packaging 'jar'
                    description 'Robo4J Lego Abstractions library'
                    url 'http://www.robo4j.io'

                    scm {
                        connection 'scm:git@github.com:Robo4J/robo4j.git'
                        developerConnection 'scm:git@github.com:Robo4J/robo4j.git'
                        url 'scm:git@github.com:Robo4J/robo4j.git'
                    }

                    licenses {
                        license {
                            name 'GNU General Public License, Version 3.0'
                            url 'http://www.gnu.org/licenses/gpl-3.0.txt'
                        }
                    }

                    developers {
                        developer {
                            id 'thegreystone'
                            name 'Marcus Hirt'
                            email 'marcus@robo4j.io'
                        }

                        developer {
                            id 'mirage22'
                            name 'Miroslav Wengner'
                            email 'miro@robo4j.io'
                        }
                    }
                }
            }
        }
    }
}

project("robo4j-units-rpi") {
    description = "Robo4J Raspberry Pi"

    //create a single Jar with all dependencies
    task fatJar(type: Jar) {
        manifest {
            attributes 'Implementation-Title': 'robo4j-units-rpi',
                    'Implementation-Version': version,
                    'Main-Class': 'com.robo4j.units.rpi.gyro.GyroExample'
        }
        //baseName = project.name + '-all'
        baseName = 'robo4j-units-rpi'
        from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
        with jar
    }

    dependencies {
        compile(project(":robo4j-core"))
        compile(project(":robo4j-hw-rpi"))
        testCompile "junit:junit:${junitVersion}"
        testCompile "org.hamcrest:hamcrest-all:${hamcrestAllVersion}"
    }

    sourceSets {
        main {
            java {
                srcDirs = ['src/main/java', 'src/examples/java']
            }
            resources {
                srcDirs = ['src/main/resources', 'src/examples/resources']
            }
        }

        test {
            java {
                srcDirs = ['src/test/java']
            }
            resources {
                srcDirs = ['src/test/resources']
            }
        }
    }

    group = "com.robo4j"
    archivesBaseName = "robo4j-units-rpi"
    version = "${robo4jVersion}"

    task javadocJar(type: Jar) {
        classifier = 'javadoc'
        from javadoc
    }

    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    artifacts {
        archives javadocJar, sourcesJar
    }

    signing {
        sign configurations.archives
    }

    uploadArchives {
        repositories {
            mavenDeployer {
                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

                repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                    authentication(userName: ossrhUsername, password: ossrhPassword)
                }

                snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                    authentication(userName: ossrhUsername, password: ossrhPassword)
                }

                pom.project {
                    name 'robo4j-units-rpi'
                    packaging 'jar'
                    description 'Robo4J Raspberry Pi Abstractions library'
                    url 'http://www.robo4j.io'

                    scm {
                        connection 'scm:git@github.com:Robo4J/robo4j.git'
                        developerConnection 'scm:git@github.com:Robo4J/robo4j.git'
                        url 'scm:git@github.com:Robo4J/robo4j.git'
                    }

                    licenses {
                        license {
                            name 'GNU General Public License, Version 3.0'
                            url 'http://www.gnu.org/licenses/gpl-3.0.txt'
                        }
                    }

                    developers {
                        developer {
                            id 'thegreystone'
                            name 'Marcus Hirt'
                            email 'marcus@robo4j.io'
                        }

                        developer {
                            id 'mirage22'
                            name 'Miroslav Wengner'
                            email 'miro@robo4j.io'
                        }
                    }
                }
            }
        }
    }
}

project("robo4j-units-rpi-http") {
    description = "Robo4J Codecs for rpi units"

    dependencies {
        compile(project(":robo4j-socket-http"))
        compile(project(":robo4j-units-rpi"))
        testCompile "junit:junit:${junitVersion}"
        testCompile "org.hamcrest:hamcrest-all:${hamcrestAllVersion}"
    }

    sourceSets {
        main {
            java {
                srcDirs = ['src/main/java']
            }
        }

        test {
            java {
                srcDirs = ['src/test/java']
            }
            resources {
                srcDirs = ['src/test/resources']
            }
        }
    }

    group = "com.robo4j"
    archivesBaseName = "robo4j-units-rpi-http"
    version = "${robo4jVersion}"

    task javadocJar(type: Jar) {
        classifier = 'javadoc'
        from javadoc
    }

    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    artifacts {
        archives javadocJar, sourcesJar
    }

    signing {
        sign configurations.archives
    }

    uploadArchives {
        repositories {
            mavenDeployer {
                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

                repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                    authentication(userName: ossrhUsername, password: ossrhPassword)
                }

                snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                    authentication(userName: ossrhUsername, password: ossrhPassword)
                }

                pom.project {
                    name 'robo4j-units-rpi-http'
                    packaging 'jar'
                    description 'Robo4J Raspberry Pi and Http Abstractions library'
                    url 'http://www.robo4j.io'

                    scm {
                        connection 'scm:git@github.com:Robo4J/robo4j.git'
                        developerConnection 'scm:git@github.com:Robo4J/robo4j.git'
                        url 'scm:git@github.com:Robo4J/robo4j.git'
                    }

                    licenses {
                        license {
                            name 'GNU General Public License, Version 3.0'
                            url 'http://www.gnu.org/licenses/gpl-3.0.txt'
                        }
                    }

                    developers {
                        developer {
                            id 'thegreystone'
                            name 'Marcus Hirt'
                            email 'marcus@robo4j.io'
                        }

                        developer {
                            id 'mirage22'
                            name 'Miroslav Wengner'
                            email 'miro@robo4j.io'
                        }
                    }
                }
            }
        }
    }
}

project("robo4j-spring") {
    description = "Robo4J Spring support"

    repositories {
        mavenCentral()
        mavenLocal()
    }

    dependencies {
        compile(project(":robo4j-core"))
        testCompile "junit:junit:${junitVersion}@jar"
        testCompile "org.hamcrest:hamcrest-all:${hamcrestAllVersion}@jar"
    }

    sourceSets {
        main {
            java {
                srcDirs = ['src/main/java']
            }
            resources {
                srcDirs = ['src/main/resources']
            }
        }

        test {
            java {
                srcDirs = ['src/test/java']
            }
            resources {
                srcDirs = ['src/test/resources']
            }
        }
    }

    group = "com.robo4j"
    archivesBaseName = "robo4j-spring"
    version = "${robo4jVersion}"

    task javadocJar(type: Jar) {
        classifier = 'javadoc'
        from javadoc
    }

    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    artifacts {
        archives javadocJar, sourcesJar
    }

    signing {
        sign configurations.archives
    }

    uploadArchives {
        repositories {
            mavenDeployer {
                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

                repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                    authentication(userName: ossrhUsername, password: ossrhPassword)
                }

                snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                    authentication(userName: ossrhUsername, password: ossrhPassword)
                }

                pom.project {
                    name 'robo4j-spring'
                    packaging 'jar'
                    description 'Robo4J Spring support'
                    url 'http://www.robo4j.io'

                    scm {
                        connection 'scm:git@github.com:Robo4J/robo4j.git'
                        developerConnection 'scm:git@github.com:Robo4J/robo4j.git'
                        url 'scm:git@github.com:Robo4J/robo4j.git'
                    }

                    licenses {
                        license {
                            name 'GNU General Public License, Version 3.0'
                            url 'http://www.gnu.org/licenses/gpl-3.0.txt'
                        }
                    }

                    developers {
                        developer {
                            id 'thegreystone'
                            name 'Marcus Hirt'
                            email 'marcus@robo4j.io'
                        }

                        developer {
                            id 'mirage22'
                            name 'Miroslav Wengner'
                            email 'miro@robo4j.io'
                        }
                    }
                }
            }
        }
    }
}


task wrapper(type: Wrapper) {
    gradleVersion = "${roboGradleVersion}"
}

/* global settings */
configure(allprojects) { project ->
    group = "com.robo4j"

    compileJava.options*.compilerArgs = [
            "-Xlint:unchecked", "-Xlint:rawtypes",
    ]

    compileTestJava.options*.compilerArgs = [
            "-Xlint:deprecation", "-Xlint:unchecked", "-Xlint:rawtypes",
    ]
}

